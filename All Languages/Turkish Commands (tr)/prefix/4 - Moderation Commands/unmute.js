"use strict";
const database = require("../../../../Helpers/Database");
const {
    EMOJIS
} = require("../../../../settings.json");
const {
    EmbedBuilder,
    RESTJSONErrorCodes
} = require("discord.js");
const Util = require("../../../../Helpers/Util");

module.exports = {
    name: "unmute", // Komutun ismi
    id: "unmute", // Komutun ID'si
    cooldown: 3, // Komutun bekleme sÃ¼resi
    aliases: [ // Komutun diÄŸer Ã§aÄŸÄ±rma isimleri
        "unmute",
    ],
    description: "KullanÄ±cÄ±nÄ±n susturmasÄ±nÄ± kaldÄ±rÄ±r", // Komutun aÃ§Ä±klamasÄ±
    category: "Moderasyon komutlarÄ±", // Komutun kategorisi (yardÄ±m menÃ¼sÃ¼ iÃ§in)
    usage: "<px>unmute <@kiÅŸi veya KiÅŸi ID'si>", // Komutun kullanÄ±m ÅŸekli
    care: false, // Komutun bakÄ±m modunda olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    ownerOnly: false, // Komutun sadece sahiplere Ã¶zel olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    premium: false, // Komutun sadece premium kullanÄ±cÄ±lara Ã¶zel olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    addHelpCommand: true, // Komutun yardÄ±m komuta eklenip eklenmeyeceÄŸini ayarlar

    /**
     * Parametrelerdeki isimlerin ne olduklarÄ±nÄ± tanÄ±mlar
     * @param {import("../../../../typedef").exportsRunCommands} params 
     */
    async execute({
        alisa,
        guildDatabase,
        msg,
        msgMember,
        guildMe,
        guildId,
        guild,
        authorId,
        args,
        prefix,
        errorEmbed,
        language,
    }) {

        // EÄŸer yetkili rolÃ¼ varsa yetkili rolÃ¼nÃ¼n olup olmadÄ±ÄŸÄ±nÄ± kontrol et
        const authorizedRoleId = guildDatabase.moderation.roleIds.muteAuth;
        if (authorizedRoleId) {
            // EÄŸer kullanÄ±cÄ±da yetkili rolÃ¼ yoksa hata dÃ¶ndÃ¼r
            if (!msgMember["_roles"].includes(authorizedRoleId) && !msgMember.permissions.has("ModerateMembers")) return errorEmbed(`<@&${authorizedRoleId}> rolÃ¼ne **veya** Ãœyelere zaman aÅŸÄ±mÄ± uygula`, "memberPermissionError");
        }
        // EÄŸer yetkili rolÃ¼ ayarlanmamÄ±ÅŸsa kullanÄ±cÄ±nÄ±n "Ãœyelere zaman aÅŸÄ±mÄ± uygula" yetkisinin olup olmadÄ±ÄŸÄ±nÄ± kontrol et
        else if (!msgMember.permissions.has("ModerateMembers")) return errorEmbed("Ãœyelere zaman aÅŸÄ±mÄ± uygula", "memberPermissionError");

        // EÄŸer botta "Ãœyelere zaman aÅŸÄ±mÄ± uygula" yetkisi yoksa
        if (!guildMe.permissions.has("ModerateMembers")) return errorEmbed("Ãœyelere zaman aÅŸÄ±mÄ± uygula", "botPermissionError");

        const member = msg.mentions.members.first() || await Util.fetchMember(msg, args[0]);

        if (!member) return errorEmbed(
            member === null ?
                "GÃ¶rÃ¼nen o ki etiketlediÄŸiniz kiÅŸi sunucuda deÄŸil ya da baÅŸka bir ÅŸeyin ID'sini yazdÄ±nÄ±z :(" :
                "LÃ¼tfen bir kiÅŸiyi etiketleyiniz ya da ID'sini giriniz"
        );

        const memberId = member.id;

        // EÄŸer sunucu sahibinin mutesini aÃ§maya Ã§alÄ±ÅŸÄ±yorsa
        if (memberId == guild.ownerId) return errorEmbed("Bu komutu sunucu sahibinin Ã¼stÃ¼nde kullanamazsÄ±n ÅŸapÅŸik ÅŸey seni :)");

        // EÄŸer kiÅŸi zaten muteli deÄŸil ise
        if (!member.communicationDisabledUntilTimestamp) return errorEmbed(`EtiketlediÄŸiniz kiÅŸi zaten susturulmuÅŸ deÄŸil!`);

        // EÄŸer mutesini aÃ§maya Ã§alÄ±ÅŸtÄ±ÄŸÄ± kiÅŸi botun rolÃ¼nÃ¼n Ã¼stÃ¼ndeyse
        const highestRole = guildMe.roles.highest;
        if (member.roles.highest.position >= highestRole.position) return errorEmbed(`EtiketlediÄŸiniz kiÅŸinin rolÃ¼nÃ¼n sÄ±rasÄ± benim rolÃ¼mÃ¼n sÄ±rasÄ±ndan yÃ¼ksek! LÃ¼tfen <@&${Util.getBotOrHighestRole(guildMe).id}> adlÄ± rolÃ¼ Ã¼ste Ã§ekiniz ve tekrar deneyiniz`);

        // KullanÄ±cÄ±nÄ±n mutesini kaldÄ±r
        await member.disableCommunicationUntil(null, `Muteyi kaldÄ±ran yetkili: ${msg.author.displayName}`)
            // EÄŸer muteyi kaldÄ±rma iÅŸlemi baÅŸarÄ±lÄ±ysa
            .then(async () => {
                const NOW_TIME = Date.now();

                // KullanÄ±cÄ±nÄ±n mutesini aÃ§madan Ã¶nce Ã¶nceki mesaj atma setTimeout fonksiyonunu kaldÄ±r
                const isSetTimeout = msg.client.mutedMembers.get(`${guildId}.${memberId}`);
                if (typeof isSetTimeout == "function") {
                    isSetTimeout();
                    msg.client.mutedMembers.delete(`${guildId}.${memberId}`);
                }

                // KullanÄ±cÄ±nÄ±n log bilgilerini gÃ¼ncelle
                const userLogs = guildDatabase.userLogs[memberId] ??= [];

                userLogs.unshift({
                    type: "unmute",
                    authorId,
                    timestamp: NOW_TIME
                });

                msg.reply(`${EMOJIS.yes} <@${memberId}> adlÄ± kiÅŸinin susturulmasÄ± baÅŸarÄ±yla kaldÄ±rÄ±ldÄ±!`);

                // Database'yi gÃ¼ncelle
                database.writeFile(guildDatabase, guildId);

                // EÄŸer mod log kanalÄ± varsa o kanala mesaj at
                const modLogChannelId = guildDatabase.moderation.channelIds.modLog;
                if (modLogChannelId) {
                    const modChannel = guild.channels.cache.get(modLogChannelId);

                    // EÄŸer kanal varsa iÅŸlemleri devam ettir
                    if (modChannel) {
                        const memberAvatar = member.displayAvatarURL();

                        // Milisaniyeden saniyeye Ã§evirme fonksiyonu
                        function msToSecond(milisecond) {
                            return Math.round(milisecond / 1000);
                        }

                        const embed = new EmbedBuilder()
                            .setAuthor({
                                name: member.user.displayName,
                                iconURL: memberAvatar
                            })
                            .setDescription(
                                `**ğŸ”Š <@${memberId}> adlÄ± Ã¼yenin susturulmasÄ± kaldÄ±rÄ±ldÄ±**\n\n` +
                                `ğŸ§° **SUSTURMAYI AÃ‡AN YETKÄ°LÄ°**\n` +
                                `**â€¢ AdÄ±:** <@${authorId}> - ${Util.recreateString(msg.author.displayName)}\n` +
                                `**â€¢ SusturmayÄ± aÃ§tÄ±ÄŸÄ± tarihi:** <t:${msToSecond(NOW_TIME)}:F> - <t:${msToSecond(NOW_TIME)}:R>\n\n` +
                                `ğŸ‘¤ **SUSTURULMASI AÃ‡ILAN ÃœYE**\n` +
                                `**â€¢ AdÄ±:** <@${memberId}> - ${Util.recreateString(member.user.displayName)}`
                            )
                            .setThumbnail(memberAvatar)
                            .setColor("#b90ebf")
                            .setFooter({
                                text: `Alisa Log sistemi`,
                                iconURL: msg.client.user.displayAvatarURL()
                            })
                            .setTimestamp()

                        modChannel.send({
                            embeds: [
                                embed
                            ]
                        })
                    }

                }

            }).catch(err => {
                // EÄŸer yetki hatasÄ± verdiyse
                if (err.code == RESTJSONErrorCodes.MissingPermissions) return msg.reply(`<@${memberId}> adlÄ± kiÅŸinin rollerini dÃ¼zenlemeye yetkim yetmiyor. LÃ¼tfen <@&${Util.getBotOrHighestRole(guildMe).id}> adlÄ± rolÃ¼ Ã¼ste Ã§ekiniz ve tekrar deneyiniz`);

                console.log(err);
                return msg.reply(
                    `IÄ±Ä±Ä±Ä± ÅŸey.. Bir hata oluÅŸtu da daha sonra tekrar dener misin?\n` +
                    `\`\`\`js\n` +
                    `${err}\`\`\``
                );
            })

    },
};