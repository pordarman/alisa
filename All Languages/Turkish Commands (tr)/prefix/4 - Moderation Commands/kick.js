"use strict";
const {
    EmbedBuilder
} = require("discord.js");
const {
    EMOJIS
} = require("../../../../settings.json");
const database = require("../../../../Helpers/Database");
const Util = require("../../../../Helpers/Util");

module.exports = {
    name: "kick", // Komutun ismi
    id: "kick", // Komutun ID'si
    cooldown: 3, // Komutun bekleme sÃ¼resi
    aliases: [ // Komutun diÄŸer Ã§aÄŸÄ±rma isimleri
        "kick",
        "at",
        "sunucudanat"
    ],
    description: "EtiketlediÄŸiniz Ã¼yeyi sunucudan atar", // Komutun aÃ§Ä±klamasÄ±
    category: "Moderasyon komutlarÄ±", // Komutun kategorisi (yardÄ±m menÃ¼sÃ¼ iÃ§in)
    usage: "<px>kick <@kiÅŸi veya KiÅŸi ID'si> [Sebep]", // Komutun kullanÄ±m ÅŸekli
    care: false, // Komutun bakÄ±m modunda olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    ownerOnly: false, // Komutun sadece sahiplere Ã¶zel olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    premium: false, // Komutun sadece premium kullanÄ±cÄ±lara Ã¶zel olup olmadÄ±ÄŸÄ±nÄ± ayarlar
    addHelpCommand: true, // Komutun yardÄ±m komuta eklenip eklenmeyeceÄŸini ayarlar

    /**
     * Parametrelerdeki isimlerin ne olduklarÄ±nÄ± tanÄ±mlar
     * @param {import("../../../../typedef").exportsRunCommands} params 
     */
    async execute({
        alisa,
        guildDatabase,
        msg,
        msgMember,
        guildMe,
        guildId,
        guild,
        authorId,
        args,
        prefix,
        errorEmbed,
        language,
    }) {

        // EÄŸer yetkili rolÃ¼ varsa yetkili rolÃ¼nÃ¼n olup olmadÄ±ÄŸÄ±nÄ± kontrol et
        const authorizedRoleId = guildDatabase.register.roleIds.kickAuth;
        if (authorizedRoleId) {
            // EÄŸer kullanÄ±cÄ±da yetkili rolÃ¼ yoksa hata dÃ¶ndÃ¼r
            if (!msgMember["_roles"].includes(authorizedRoleId) && !msgMember.permissions.has("KickMembers")) return errorEmbed(`<@&${authorizedRoleId}> rolÃ¼ne **veya** Ãœyeleri At`, "memberPermissionError");
        }
        // EÄŸer yetkili rolÃ¼ ayarlanmamÄ±ÅŸsa kullanÄ±cÄ±nÄ±n "Ãœyeleri At" yetkisinin olup olmadÄ±ÄŸÄ±nÄ± kontrol et
        else if (!msgMember.permissions.has("KickMembers")) return errorEmbed("Ãœyeleri At", "memberPermissionError");

        // EÄŸer botta "Ãœyeleri engelle" yetkisine sahip deÄŸilse hata dÃ¶ndÃ¼r
        if (!guildMe.permissions.has("KickMembers")) return errorEmbed("Ãœyeleri At", "botPermissionError");

        const content = args.join(" ")
        const member = msg.mentions.members.first() || await Util.fetchMember(msg, content);

        if (!member) return errorEmbed(
            member === null ?
                "GÃ¶rÃ¼nen o ki etiketlediÄŸiniz kiÅŸi sunucuda deÄŸil ya da baÅŸka bir ÅŸeyin ID'sini yazdÄ±nÄ±z :(" :
                "LÃ¼tfen bir kiÅŸiyi etiketleyiniz ya da ID'sini giriniz"
        );

        const memberId = member.id;

        // EÄŸer kendini yasaklamaya Ã§alÄ±ÅŸÄ±yorsa
        if (memberId == authorId) return errorEmbed("Kendini sunucudan yasaklayamazsÄ±n ÅŸapÅŸik ÅŸey seni :)");

        // EÄŸer sunucu sahibini yasaklamaya Ã§alÄ±ÅŸÄ±yorsa
        if (member.id == guild.ownerId) return errorEmbed("Sunucu sahibini yasaklayamazsÄ±n ÅŸapÅŸik ÅŸey seni :)");

        // EÄŸer kendi rolÃ¼nÃ¼n Ã¼stÃ¼ndeyse
        const memberHighestRolePosition = member.roles.highest.position;
        if (memberHighestRolePosition >= msgMember.roles.highest.position && authorId != guild.ownerId) return errorEmbed("Yasaklamaya Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ±z kiÅŸinin sizin rolÃ¼nÃ¼zden Ã¼stte bu yÃ¼zden bu kiÅŸiyi yasaklayamazsÄ±nÄ±z");

        // EÄŸer botun rolÃ¼nÃ¼n Ã¼stÃ¼ndeyse
        if (memberHighestRolePosition >= guildMe.roles.highest.position) return errorEmbed("Yasaklamaya Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ±z kiÅŸinin rolÃ¼ benim rolÃ¼mden Ã¼ste, lÃ¼tfen rolÃ¼mÃ¼ Ã¼ste Ã§ekiniz ve tekrar deneyiniz");

        const reason = content.replace(
            new RegExp(`<@!?${memberId}>|${memberId}`, "gi"),
            ""
        ).replace(/ +/g, " ").trim();

        // Ãœyeyi sunucudan yasaklama
        await guild.members.kick(memberId, `Yasaklayan: ${msg.author.displayName} | Sebebi: ${reason || "Sebep belirtilmemiÅŸ"}`)
            // EÄŸer yasaklama baÅŸarÄ±lÄ± olursa
            .then(() => {
                const NOW_TIME = Date.now();

                // EÄŸer yasaklanan kiÅŸi bot deÄŸilse ceza numarasÄ±nÄ± gÃ¼ncelle
                let penaltyNumber;
                if (!member.bot) {
                    penaltyNumber = guildDatabase.penaltyNumber++;
                }

                // KullanÄ±cÄ±nÄ±n log bilgilerini gÃ¼ncelle
                const userLogs = guildDatabase.userLogs[memberId] ??= [];

                userLogs.unshift({
                    type: "kick",
                    authorId,
                    timestamp: NOW_TIME,
                    penaltyNumber
                });

                // Database'yi gÃ¼ncelle
                database.writeFile(guildDatabase, guildId);

                const recreateUserName = Util.recreateString(member.user.displayName)

                msg.reply(`${EMOJIS.yes} **${recreateUserName} - (${memberId})** baÅŸarÄ±yla sunucudan atÄ±ldÄ±, tadÄ±nÄ± Ã§Ä±kar ğŸ¥³${penaltyNumber ? ` **Ceza numarasÄ±:** \`#${penaltyNumber}\`` : ""}`)

                // EÄŸer mod log kanalÄ± varsa o kanala mesaj at
                const modLogChannelId = guildDatabase.moderation.channelIds.modLog;
                if (modLogChannelId) {
                    const modChannel = guild.channels.cache.get(modLogChannelId);

                    // EÄŸer kanal yoksa hiÃ§bir ÅŸey dÃ¶ndÃ¼rme
                    if (!modChannel) return;

                    const memberAvatar = member.displayAvatarURL();

                    // Milisaniyeden saniyeye Ã§evirme fonksiyonu
                    function msToSecond(milisecond) {
                        return Math.round(milisecond / 1000);
                    }

                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: member.user.displayName,
                            iconURL: memberAvatar
                        })
                        .setDescription(
                            `**ğŸ‘Ÿ <@${memberId}> adlÄ± Ã¼ye olarak sunucudan atÄ±ldÄ±**\n\n` +
                            `ğŸ§° **ATAN YETKÄ°LÄ°**\n` +
                            `**â€¢ AdÄ±:** <@${authorId}> - ${Util.recreateString(msg.author.displayName)}\n` +
                            `**â€¢ AtÄ±lma tarihi:** <t:${msToSecond(NOW_TIME)}:F> - <t:${msToSecond(NOW_TIME)}:R>\n\n` +
                            `ğŸ‘¤ **ATILAN ÃœYE**\n` +
                            `**â€¢ AdÄ±:** <@${memberId}> - ${recreateUserName}\n` +
                            `**â€¢ AtÄ±lma sebebi:** ${reason || "Sebep belirtilmemiÅŸ"}` +
                            (penaltyNumber ?
                                `\nâ€¢ **Ceza numarasÄ±:** \`#${penaltyNumber}\`` :
                                "")
                        )
                        .setThumbnail(memberAvatar)
                        .setColor("#b90ebf")
                        .setFooter({
                            text: `${msg.client.user.username} Log sistemi`,
                            iconURL: msg.client.member.displayAvatarURL()
                        })
                        .setTimestamp()

                    modChannel.send({
                        embeds: [
                            embed
                        ]
                    })
                }
            })
            // EÄŸer yasaklama baÅŸarÄ±sÄ±z olursa
            .catch(err => {
                return errorEmbed(
                    "Yasaklamak istediÄŸiniz Ã¼yeyi sunucudan yasaklayamadÄ±m :(\n\n" +
                    "**Sebebi:**" +
                    `â€¢ ${err}`,
                    "error",
                    30 * 1000 // MesajÄ± 30 saniye boyunca gÃ¶ster
                )
            })

    },
};